<?php 

function ORLounge_menu(){
  $items['join/%/group'] = array(
     'page callback' => 'drupal_get_form',
     'page arguments'=>array('join_group_form'),
     'access callback' =>'access_login_user',
     'file'=>'group.inc',
  );
  $items['add_new_comment'] = array(
     'page callback' => 'add_new_comment',
     'access callback' =>true,
  );
   $items['create/%/group'] = array(
     'page callback' => 'drupal_get_form',
     'page arguments'=>array('create_group_form'),
     'access callback' =>'access_login_user',
     'file'=>'group.inc',
  );

  return $items;
}

function access_login_user(){
  global $user;  
   if($user->uid==0){
     return false;
   }else if($user->name != arg(1)){
      return false;
   }else{
      return true;
   }
}
function ORLounge_block_info() {

  $blocks['welcome'] = array(
    'info' => t('Welcome to Orlounge'),
    'region' => -1,
    'status' => TRUE,
  );
  $blocks['join'] = array(
    'info' => t('Join ORLounge to'),
    'region' => -1,
    'status' => TRUE,
  );
  $blocks['home_faq'] = array(
    'info' => t('Home FAQ'),
    'region' => -1,
    'status' => TRUE,
  );
  $blocks['home_register_form'] = array(
    'info' => t('Register form block'),
    'region' => -1,
    'status' => TRUE,
  );
  return $blocks;

}

function ORLounge_block_view($delta='') {
   $block = array();
  switch($delta) {
    case 'welcome':
      $block['subject'] = 'Welcome to Orlounge';
      $block['content'] = block_welcome_content();
      break;
    case 'join':
      $block['subject'] = 'Join ORLounge to';
      $block['content'] = block_join_content();
      break;
    case 'home_faq':
      $block['content'] = block_home_faq_content();
      break;
    case 'home_register_form':
      $block['subject'] = 'Join for free';
      $block['content'] = drupal_get_form('block_register_form');
      break;
   }
   return $block;
}

function block_welcome_content(){
   $output = t('ORLounge is a community site for operating rooms. Doctors and nurses working in an operating room can create their own private Lounge sites and share their professional activities.');
  
 return $output; 
}
function block_join_content(){

   $output = '<div class="dt-sc-ico-content  type3"><div class="icon"> <span class="fa fa-hospital-o"><img src="/sites/all/themes/orlounge2014/images/formula-people.png" /> </span> </div><h5><a target="_blank" href="#"> What you can do in your own operating room Lounge site </a></h5><p>Members can share experiences; post OR notices and documents, make announcements, create working documents, make friends, discuss, collaborate, learn, look for products and services and communicate in the OR in real time. </p></div>
<div class="dt-sc-ico-content  type3"><div class="icon"> <span class="fa fa-ambulance"> <img src="/sites/all/themes/orlounge2014/images/formula-puzzle.png" /></span> </div><h5><a target="_blank" href="#"> How the site will benefit you and your OR </a></h5><p>You will improve your personal professional productivity, increase operating room efficiency and patient safety; upgrade your skills; make friends, enhance your personal and professional lives, and …much more.</p></div>
<div class="dt-sc-ico-content  type3"><div class="icon"> <span class="fa fa-medkit"><img src="/sites/all/themes/orlounge2014/images/formula-speech.png" /> </span> </div><h5><a target="_blank" href="#"> Join people with same interest </a></h5><p>Registered members can further create Special Interest “Lounges” where they meet and collaborate with other members other operating rooms with the same specialty or interest. The Special Interest Lounges could be for Surgical specialties, OR administration, Residency, Teaching, Research, and …much more.</p></div>';
  
 return $output; 
}
function block_home_faq_content(){

   $output = '<div class="home_content">
<div class="col"><div class="title">Professional of the operating room</div><div class="desc">For the first time, people working in the OR can work as a group and align their interests. An Operating Room Lounge site is a management and productivity tool, and a real time messaging site. </div><div class="link"><a href="#">Learn more</a></div></div><div class="col"><div class="title">Orlounge is free to use </div><div class="desc">The sites are administered locally. Each Operating room is responsible for its security and privacy. </div><div class="link"><a href="#">Learn more</a></div></div><div class="col"><div class="title">Need Help ?</div><div class="desc">Surgical professionals with same interest can come together with online tools to work together.</div><div class="link"><a href="#">Learn more</a></div></div>
</div>';
  
 return $output; 
}


function block_register_form($form, &$form_state){
  $form['department'] = array(
	'#type'=>'select',
	'#options'=>array(
			'Physician'=>'Physician',
			'Nurse'=>'Nurse',
			'Resident/fellow'=>'Resident/fellow',
			'Chief of Surgery'=>'Chief of Surgery',
			'OR Manager'=>'OR Manager'
			),

   );
  $form['firstname'] = array(
	'#type'=>'textfield',
	'#maxlength'=>30,
	'#size'=>30,
	'#default_value'=>'Your First Name (required)',
  );
  $form['lastname'] = array(
	'#type'=>'textfield',
	'#maxlength'=>30,
	'#size'=>30,
	'#default_value'=>'Your Last Name',
  );
  $form['email'] = array(
	'#type'=>'textfield',
	'#maxlength'=>30,
	'#size'=>30,
	'#default_value'=>'Your Email (required)',
  );
  $form['password'] = array(
	'#type'=>'password',
	'#maxlength'=>30,
	'#size'=>30,
	'#required'=>true,
	'#description'=>t('Your password'),
  );
  $form['password_confirm'] = array(
	'#type'=>'password',
	'#maxlength'=>30,
	'#size'=>30,

	'#description'=>t('Password confirm'),
  );
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
	'#type'=>'submit',
	'#value'=>t('Submit'),	
	
  ); 

  return $form ;
}

function block_register_form_validate($form, &$form_state){

    $password = $form_state['values']['password'];
    $pass_confirm = $form_state['values']['password_confirm'];
    $firstname = $form_state['values']['firstname'];
    $mail =  $form_state['values']['email'];
     if($password!=$pass_confirm){
      form_set_error('password_confirm', t('Passwords do not match.'));
    }
    if(strlen($password)<6){
      form_set_error('password', t('Password length must not be less than 6 characters.'));
    }
    if($firstname=='') {
      form_set_error('firstname', t('First name not is empty.'));
    }
    if(valid_email_address($mail) == 0) {
      form_set_error('email', t('Not a valid email address.'));
    }  
}
function block_register_form_submit($form, &$form_state){

  $mail = $form_state['values']['email'];
  $firstname = $form_state['values']['firstname'];
  $pass = $form_state['values']['password_confirm'];
  register_user_form_data($mail,$firstname,$pass,$form_state);

}

/**
* Create a new user  
*/
function register_user_form_data($mail, $firstname,$pass,&$form_state){

       $check_email = db_query('select count(*) from {users} where mail = :mail', array(
            ':mail' => $mail
        ))->fetchfield();
       $check_name = db_query('select count(*) from {users} where name = :name', array(
            ':name' => $firstname
      ))->fetchfield();
	if($check_email==0){
		if($check_name==0){

                 if($form_state['values']['department']=='OR Manager'){
                   $role = array('5'=>true);
                 } else{
                   $role = array('2'=>true);
                 } 
                $account = array(
                    'name' => $firstname,
                    'pass' => $pass,
                    'mail' => $mail,
                    'status' => 1,
                    'init' => $mail,
                    'roles' => $role
                );
                user_save(null, $account);
		$userRecord = user_authenticate($firstname, $pass);
		$form_state['uid'] = $userRecord;
		user_login_submit(array(), $form_state); 		

		  if($form_state['values']['department']=='OR Manager'){

                     $form_state['redirect'] = 'create/'.$firstname.'/group';  
                  }else{
                     $form_state['redirect'] = 'join/'.$firstname.'/group'; 
                  }
		}else{
		$firstname = $firstname.'1';
		register_user_form_data($mail, $firstname,$pass,$form_state);
		}
	}else{
            drupal_set_message(t('The email '.$mail.' is already taken.'),'error');
	}

}

function registration_welcome($content){
    return theme('welcome',array('content'=>$content));
}

function ORLounge_theme(){
    $item = array(
     'welcome'=>array(  
      'template' => 'welcome',
      'variables' => array('content' => null),
      'path' => drupal_get_path('module', 'ORLounge'),
      ),
    );
return $item;
}


function add_new_comment(){ 
 $nid = $_POST['nid'];
 $uid = $_POST['uid'];
 $comment_body = empty($_POST['comment'])?'':$_POST['comment'];
 $user = user_load($uid);
$comment = new stdClass();

$comment->nid = $nid; // nid of a node you want to attach a comment to
$comment->cid = 0; // leave it as is
$comment->pid = 0; // parent comment id, 0 if none 
$comment->uid = $uid; // user's id, who left the comment
$comment->mail = $user->mail; // user's email
$comment->name = $user->name; // If user is authenticated you can omit this field, it will be auto-populated, if the user is anonymous and you want to name him somehow, input his name here
$comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
$comment->hostname = '127.0.0.1' ;// OPTIONAL. You can log poster's ip here
$comment->created = time(); // OPTIONAL. You can set any time you want here. Useful for backdated comments creation.
$comment->is_anonymous = 0; // leave it as is
$comment->homepage = ''; // you can add homepage URL here
$comment->status = COMMENT_PUBLISHED; // We auto-publish this comment
$comment->language = LANGUAGE_NONE; // The same as for a node
$comment->subject = 'Comment subject'; 
$comment->comment_body[$comment->language][0]['value'] = $comment_body; // Everything here is pretty much like with a node
$comment->comment_body[$comment->language][0]['format'] = 'filtered_html'; 
//$comment->field_custom_field_name[LANGUAGE_NONE][0]['value'] = 'Some value'; // OPTIONAL. If your comment has a custom field attached it can added as simple as this // preparing a comment for a save

comment_submit($comment); // saving a comment
comment_save($comment);
 
 print '<div class="comment-row"><img src="/sites/default/files/pictures/picture-1-1397187278.jpg"><div class="comment-body"><span class="user-name">'.$user->name.'</span>'.$comment_body.'<div class="comment-date">'.format_interval((time() - $comment->created), 2) . t(' ago').'</div></div></div>';
}


